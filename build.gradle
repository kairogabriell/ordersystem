plugins {
    id 'java'
    id 'org.flywaydb.flyway' version '8.0.0'
    id 'application'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.flywaydb:flyway-core:8.0.0'
    implementation 'org.postgresql:postgresql:42.2.20'
    implementation 'com.sparkjava:spark-core:2.9.3'
    implementation 'ch.qos.logback:logback-classic:1.2.10'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'com.google.code.gson:gson:2.8.9'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testImplementation 'org.mockito:mockito-core:4.5.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.5.1'
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

test {
    useJUnitPlatform()
}

// Função para carregar propriedades do arquivo especificado
def loadProperties(filePath) {
    def properties = new Properties()
    file(filePath).withInputStream { stream ->
        properties.load(stream)
    }
    return properties
}

def mainProperties = loadProperties('src/main/resources/application.properties')
def testProperties = loadProperties('src/main/resources/application-test.properties')

flyway {
    url = mainProperties.getProperty('db.url')
    user = mainProperties.getProperty('db.username')
    password = mainProperties.getProperty('db.password')
    schemas = ['public']
    locations = ['filesystem:src/main/resources/db/migration']
    baselineOnMigrate = true
}

// Configuração para executar a classe principal
application {
    mainClass = 'com.example.ordersystem.Main'
}

task runMain(type: JavaExec) {
    mainClass = 'com.example.ordersystem.Main'
    classpath = sourceSets.main.runtimeClasspath
    args = []
}

task migrateTestDb {
    doLast {
        flyway {
            url = testProperties.getProperty('db.url')
            user = testProperties.getProperty('db.username')
            password = testProperties.getProperty('db.password')
            schemas = ['public']
            locations = ['filesystem:src/main/resources/db/migration']
            baselineOnMigrate = true
        }
        flywayMigrate.execute()
    }
}
